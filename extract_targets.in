#!/bin/sh
#
# Maketool - GTK-based front end for gmake
# Copyright (c) 1999-2001 Greg Banks
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
# 
# $Id: extract_targets.in,v 1.6 2002-09-24 14:21:59 gnb Exp $
#

MAKEARGS=
MAKEFILE=
AWK=awk

while [ $# -gt 0 ]; do
    case "$1" in
    -f)
	MAKEARGS="$MAKEARGS $1 $2"
    	MAKEFILE="$2"
	shift
	;;

    *)
    	MAKEARGS="$MAKEARGS $1"	
	;;
    esac
    shift
done

MAKE="@GMAKE@ -n -p"

case `uname -s` in
IRIX*)
    if [ -z "$MAKEFILE" ]; then
	for f in GNUmakefile makefile Makefile ; do
    	    if [ -f $f ]; then
		MAKEFILE=$f
		break
	    fi
	done
    fi

    if [ ! -z "$MAKEFILE" -a "`head -1 $MAKEFILE`" = "#!smake" ]; then
	# Hack to handle smake Makefiles on IRIX
	MAKE="/usr/sbin/smake -q -p 1"
	# IRIX awk can't handle long lines from "smake -p 1"
	AWK=gawk
    fi
    ;;
esac

$MAKE $MAKEARGS _no_such_target_ 2>/dev/null | $AWK '
BEGIN {
    isTarget = 1
    isFile = 0
}
/^# Files/ {
    # GNU gmake -p
    isFile = 1
}
/^# Not a target:/ {
    # GNU gmake -p
    isTarget = 0
}
/^# VPATH Search Paths/ {
    # GNU gmake -p
    isFile = 0
}
/^#\*\*\* Input graph:/ {
    # IRIX smake -p 1
    isFile = 1
}
/^#\*\*\* Global Variables:/ {
    # IRIX smake -p 1
    isFile = 0
}
function filter_and_emit_target(targ,	suitable) {
    # Filter out some real but useless targets
    suitable = 1
    if (substr(targ, 0, 1) == ".")
	suitable = 0
    if (index(targ, "/.") > 0)
	suitable = 0
    if (substr(targ, 0, 1) == "/")
	suitable = 0
    if (substr(targ, 0, 3) == "../")
	suitable = 0
    if (substr(targ, 0, 1) == "_")
	suitable = 0
    if (substr(targ, length(targ)-1, 2) == ".o")
	suitable = 0
    if (match(targ, "DESCEND$"))
	suitable = 0
    if (match(targ, "SETUPDIR$"))
	suitable = 0
    if (suitable)
    	print targ
}
/^[^#:! \t][^#:! \t]*[ \t]*[:!]/ {
    if (isFile && isTarget) {
    	targ = $0;
	gsub("[:!].*$", "", targ);
	gsub("[ \t][ \t]*", "", targ);
	filter_and_emit_target(targ);
    }
    isTarget = 1
}' | sort -u
